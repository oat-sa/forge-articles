h1. Internationalization (i18n)

{{>toc}}

The TAO application comes up with utilities to translate its Graphical User Interface and Models. The application can be translated in any language that can be written using "Unicode":http://www.unicode.org (with UTF-8 encoding).

h2. Extension Locales

In TAO, a _Locale_ is the definition of all _messages_ to be translated for a given TAO Extension. Indeed, the internationalization process applies on each TAO Extension. Any translation description files are located in the _/locales_ directory of the Extension to be translated. In this _/locales_ folder you will find a directory dedicated to each language. The directory name for a language contained in the _/locales_ directory is actually its international code (e.g. _FR_ for _French_) and will be used as a unique identifier for this locale across Extensions.

h3. Locale Structure

An Extension _Locale_ is composed of several translation files. For instance, the French _Locale_ for the Extension _taoGroups_ is located in the _/[tao_installation_path]/taoGroups/locales/FR_ directory and contains the following files:

* *messages.po*: contains the translations of the Graphical User Interface. This is the file you must edit if you want to change the translation of a _message_ displayed in the _taoGroups_ Extension. These files are using the well-known PO "format":http://www.gnu.org/software/hello/manual/gettext/PO-Files.html of "GNU gettext":http://www.gnu.org/software/gettext/.
* *messages.lang.php*: contains a PHP compiled version (as an associative array) of _messages.po_ used at runtime on the server-side. It also includes translations of messages contained in extensions on which the extension you translate depends on for better performance. This file must not be edited manually.
* *messages_po.js*: contains a JSON (JavaScript Object Natation) compiled version of _messages.po_ used at runtime on the client side. As *messages.lang.php* files, it contains the translations of messages contained in extensions on which the translated extension depends on.
* *taogroup.rdf*: contains the translations of the Data Model of your extension. It uses the RDF-XML standard to describe the rdfs:labels and rdfs:comment properties values of the resources of a given _Data Model_. In this example, the *taogroup.rdf* file located in _/taoGroups/locales/FR_ contains references to all rdfs:label and rdfs:comment properties of the _Classes_, _Properties_ and _Instances_ contained in the _taogroup.rdf_ XML-RDF _Data Model_ which can be found in the _/taoGroups/models/ontology_ directory.
* *other .rdf files*: translations of various Data Models of your extensions that are not mandatory.

Please note that an exception arises regarding the _tao_ Meta-Extension. Indeed, it contains an additional file named *lang.rdf* wich contains the description of the _locale_ to insert in the Database to make it available to end-users.

h2. Internationalized Source Code

To make sure that _messages_ contained in the source code will be included in _message.po_ files, you can use the __() method. For instance, if you have to display the message "Hello World" in your PHP Source code, simply write:

<pre>
<code class="php">echo __('Hello World');</code>
</pre>

When the _messages.po_ will be generated by parsing the source code of TAO, looking up for __() calls, you will see the following message to be be translated appear in it:
<pre>
msgid "Hello World"
msgstr ""
</pre>

There is now only to translate "Hello World" in the correct language (French example):

<pre>
msgid "Hello World"
msgstr "Bonjour le monde"
</pre>

The same technique to generate _messages_ can applies to JavaScript source code as well, still using the __() method.

h2. PO Files

h3. PO Files Format

TAO implements the "gettext":http://www.gnu.org/software/gettext/ "PO file format":http://www.gnu.org/software/hello/manual/gettext/PO-Files.html to provide a fast and easy way to translate _messages_ in its source code.

Here is a minimal PO file as they are formed in TAO for a _French_ _locale_:

<pre>
msgid ""
msgstr ""
"Project-Id-Version: TAO v2.4\n"
"PO-Revision-Date: 2012-09-21T15:06:16\n"
"Last-Translator: TAO Translation Team <translation@tao.lu>\n"
"MIME-Version: 1.0\n"
"Language: FR\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Hello World"
msgstr "Bonjour le monde"
</pre>

In TAO PO files, the first message is always a _meta-message_. Such a message has an empty _msgid_ but its _msgstr_ contains information about the file. In this sample file, we can find the following information:

* *Project-Id-Version*: The project the PO file belongs to.
* *PO-Revision-Date*: Corresponds to the last time the file was updated with new messages extracted from the source code.
* *Last-Translator*: The last translator that translated messages in the file.
* *MIME-Version*: The PO format version in use.
* *Language*: The target language of the PO file. In other words, the language in which messages have to be translated.
* *Content-type*: The type of the content in this file.
* *Content-Transfer-Encoding*: How the file is encoded during a transfer.

Right after this meta-information comes the first _message_ of the file, made up of two components which are _msgid_ and _msgstr_. 

<pre>
msgid "Hello World"
msgstr "Bonjour le monde"
</pre>

The *msgid* component corresponds to the initial message extracted from the source code. The translator will take its value, put between double quotes (") to create its translation. In this example, the value of _msgid_ is _Hello World_.

The *msgstr* component contains the translation of _msgid_, that will be displayed to the end user that selects the related locale. When extracted from the source code, the _msgstr_ component will appear empty. The translator will have to enter its value.

h3. How to Edit PO Files

Because PO files are just plain text files, you can use your favorite editor to modify them. In this case, please make sure that the encoding in use is *UTF-8*. On the other and, you can use specialize gettext editor that will display messages to be translated in a more friendly way. We recommend the use of "POEdit":http://www.poedit.net/: a free and multi-platform gettext editor.

h3. PO files Compilation

When _messages_ contained in a PO File are updated (e.g. correction of an existing translation) or are simply added, it has to be compiled. Indeed, only compiled translations are available to the end-users for better performance. TAO is packaged with translation tools making you able to compile PO files on your own. To do so, please refer to the [[tao_scripts_translate|TAO Translate Script Documentation]].

h2. RDF Translation Models

Because TAO uses Ontologies in the Resource Description Framework (RDF), its _Data Models_ are totally translatable. Any _Class_, _Class Property_ or _Resource_ in TAO has two properties, rdfs:label and rdfs:comments that can be translated for each language your TAO platform supports.

Here is an example of RDF Model Translation (RMT) shipped with the standard Open Source release of TAO, that describes how to translate the _Data Model_ of the _taoGroups_ extension in the _French_ locale, located in _/taoGroups/locales/FR/taogroup.rdf_.

<pre>
<?xml version="1.0" encoding="UTF-8"?>
<!--
    @sourceLanguage EN
    @targetLanguage FR
-->
<rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xml:base="http://www.tao.lu/Ontologies/TAOGroup.rdf">
  <rdf:Description rdf:about="http://www.tao.lu/Ontologies/TAOGroup.rdf#Group">
    <!--
    @sourceLanguage EN
    @targetLanguage FR
    @source Group
    @subject http://www.tao.lu/Ontologies/TAOGroup.rdf#Group
    @predicate http://www.w3.org/2000/01/rdf-schema#label
    -->
    <rdfs:label xml:lang="FR"><![CDATA[Groupe]]></rdfs:label>
    <!--
    @sourceLanguage EN
    @targetLanguage FR
    @source Group
    @subject http://www.tao.lu/Ontologies/TAOGroup.rdf#Group
    @predicate http://www.w3.org/2000/01/rdf-schema#comment
    -->
    <rdfs:comment xml:lang="FR"><![CDATA[La Classe Groupe. Un aggrégat de Sujets.]]></rdfs:comment>
  </rdf:Description>
  ...
  ...
 </rdf:RDF>
</pre>

The most important thing to understand in this RMT is that the label and comments translations are located within the <rdfs:label> and <rdfs:comment> tags. In this example, *<rdfs:label xml:lang="FR"><![CDATA[Groupe]]></rdfs:label>* represents the label of the _Group Class_ translated in _French_. On the other hand *<rdfs:comment xml:lang="FR"><![CDATA[La Classe Groupe. Un aggrégat de Sujets.]]></rdfs:comment>* depicts the textual description of the _Group Class_.

h2. Dealing with your own locales

The TAO Platform comes with dedicated tools that help you to create and maintain your own locales. It takes shape as a command line script that can be accessed throuh PHP CLI. These dedicated tools will make you able to create and update your own locales in TAO.

h3. Create a locale

Create a new locale is easy as a single command line. Open your favourite command line interface and go in the _/path_to_your_install/tao/scripts_ directory. In the following example, we will create a locale es-MX (Mexican Spanish) for each extension delivered in the Open Source release of TAO.
<pre>
cd /path_to_your_install/tao/scripts
php taoTranslate.php -v -a create -l es-MX -ll "Mexican Spanish" -e filemanager,tao,taoCoding,taoDelivery,taoGroups,taoItems,taoResults,taoSubjects,taoTests,wfAuthoring,wfEngine
</pre>

As a result, you will get a new locale directory named _es-MX_ for each extension of the Open Source release of TAO. Each locale folder contains PO Files and RTMs ready to be translated.

h2. How to choose your language tag

TAO uses IETF BCP 47 language codes. If you need to choose a language tag, please refer to:

* http://www.w3.org/International/articles/language-tags
* http://www.iana.org/assignments/language-subtag-registry

Examples (You are not forced to used region tags. The only requirement is a first region tag, and add least one sub tag after).

* nl-NL -> nl = Dutch (language-tag), NL = Netherlands (region-tag)
* fr-BE -> fr = French (language-tag), BE = Belgium (region-tag)
* zh-SG -> zh = Chinese (language-tag), SG = Singapore (region-tag)
* ar-arb -> ar = Arabic (language-tag), arb = Standard Arabic (language-tag)

h2. How to update or add translations

h3. Scan the source files for __() enclosed strings

<pre>php tao/scripts/taoTranslate.php -v -a=create -e=taoQtiTest -l=fr-FR
/** if already exists */
php tao/scripts/taoTranslate.php -v -a=update -e=taoQtiTest -l=fr-FR</pre>

This will generate a the following file: $ext/locales/$lang/messages.po. 
Fill generated po file with your translation.

h3. Compile the file into php and javascript

<pre>php tao/scripts/taoTranslate.php -v -a=compile -e=taoDelivery -l=fr-FR</pre>

h3. Update TAO

<pre>php tao/scripts/taoUpdate.php</pre>

/!\ Use -f to reset actual translations po files



!http://forge.taotesting.com/attachments/download/215/returnTopArrow.JPG![[Internationalization|Return to Top]]