h1. Tutorial - SVG Icons

As of version 3.0 TAO uses custom icon fonts. With the 3.1 release there will also be support for SVG icons. They are especially interesting for extensions since they don't require a change of the TAO icon font. 

h2. SVG format

You need to use SVG that contains symbols which looks like this

<pre><code class="xml">
<svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
    <defs>
        <symbol id="icon-foo" viewBox="0 0 16 16">
            <path d="M15.25[...]"></path>
        </symbol></code></pre>

If your SVG doesn't use symbols an easy way to create them is to use https://icomoon.io/app/. Create a new collection, import one or more SVG files, click on *Generate SVG and more*. In the resulting zip file *symbol-defs.svg* is your converted SVG file containing all symbols.

h2. Prerequisites in an extension context

Extension icons refers to all icons that are set in _structures.xml_. When using the TAO icon font icons in _structures.xml_ look like this:

<pre><code class="xml"><icon id="icon-foo"/></code></pre>

This is a bit different for svg icons. In this example we expect an SVG in _/anotherOne/views/img/example.svg_ that contains a symbol with the ID _icon-foo_. The _ext_ attribute is optional, the default is the structure to which the structure belongs.

<pre><code class="xml"><icon src="example.svg" ext="anotherOne" id="icon-foo"/></code></pre>

h2. The rendered HTML


<pre><code class="html">
<svg>
    <use xlink:href="http://yourdomain/anotherOne/views/img/example#icon-foo"></use>
</svg></code></pre>

On browsers that lack complete support for <code class="html"><use/></code> the content of the symbol will be used instead. This is done with a JavaScript polyfill.

<pre><code class="html">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1097 1024">
    <g class="use">
        <!--content of symbol icon-foo-> 
    </g>
</svg></code></pre> 

The group with the class _.use_ will be added to make CSS easier.

h2. CSS for SVG icons

SVG can be used several ways, for instance as source an <code><img /></code> element or as a background image. If you want to use CSS on an SVG you will need to put it in the HTML directly as demonstrated above. CSS is mostly straight forward. Changing the colors though can be a little bit tricky. Firstly color is called *fill* or *stroke* depending on the construction SVG. https://developer.mozilla.org/en-US/docs/Web/SVG/Tutorial/Fills_and_Strokes explains this in great detail. 

<pre><code class="css">
use, g.use {
    fill: currentColor !important;
}
</code></pre> 
                    


