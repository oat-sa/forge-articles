h1. TAO Contuinous Integration

Here are the different steps that are run on daily bases, all source code and config file are available on https://github.com/oat-sa/package-build

h2. Build the package

* Download package-tao from github
* Switch to develop branch
* Retrieve all extensions and dependencies using composer
* Create a zip package

h2. Quality checks

* Generate dependency report with other software metrics using "PHP_Depend":http://pdepend.org
* Look for several potential problems within the source "PHP Mess Detector":http://phpmd.org
* Find duplicate code using  "PHPCPD":https://github.com/sebastianbergmann/phpcpd
* Measuring the size and analyzing the structure of the project using "PHPLOC":https://github.com/sebastianbergmann/phploc
* Tokenises PHP, JavaScript and CSS files and detects violations of a defined set of coding standards using "PHP_CodeSniffer":http://github.com/squizlabs/PHP_CodeSniffer. Ruleset considered are defined in conf/phpcs.xml

h2. Unit Test 

* Install the platform with all extensions
* Run Unit test according to test configration stored in conf/phpunit_mysql.xml
* Generate code coverage report

h2. Howto setup Jenkins 

* Create your jenkins project
* Create the file build.properties

<pre>    release.version=nightly
    release.source.name=TAO_${release.version}_build
    
    db.driver=
    db.host=
    db.name=
    db.pass=
    db.user=

    module.mode=
    module.name=
    module.namespace=
    module.url=

    user.login=
    user.pass=</pre>
* Git clone this repository

<pre>    git@github.com:oat-sa/package-build.git</pre>
* Setup phing tasks
* Setup PMD analisys

<pre>    build/logs/pmd-*.xml</pre>
* Setup phploc report

<pre>
    A - Lines of code
    Lines of Code
    build/logs/phploc.csv
    
    B - Structures
    Count
    build/logs/phploc.csv
    
    C - Testing
    Count
    build/logs/phploc.csv
    
    D - Types of Classes
    Count
    build/logs/phploc.csv
    
    E - Types of Methods
    Count
    build/logs/phploc.csv
    
    F - Types of Constants
    Count
    build/logs/phploc.csv
</pre>
* Setup PHPCS report

<pre>    build/logs/checkstyle.xml</pre>
* Setup PHPCPD reports

<pre>    build/logs/pmd-cpd.xml</pre>
* Setup Code Coverage

<pre>   **/*-test-suite.xml</pre>

* Deploy zip file on taotesting.com

h2. Reports 

Here some example of reports generated 

* "Main Page":http://docs.taotesting.com/reports/main.pdf
* "PHPLOC":http://docs.taotesting.com/reports/phploc.pdf
* "PHP_Depend":http://docs.taotesting.com/reports/jdepend.pdf
* "phpunit":http://docs.taotesting.com/reports/build-tao%20%2352%20Test%20Results%20%5BJenkins%5D.pdf
* "coverage":http://docs.taotesting.com/coverage/

h2. Additional builds

h3. Build Tag

In order to create the stable release version we also have gather different utilities in 
https://github.com/oat-sa/package-build-tag 

* Download package-tao from github
* Retrieve all extensions and dependencies using composer
* Create a zip package
* Create tag for all extensions that will be part of the release
* Re create new develop branch in each extension to start a new cycle

h3. Build JS

This build available at https://github.com/oat-sa/package-build-js gather script to compile client side resources

* Download package-tao from github
* Retrieve all extensions and dependencies using composer
* Run compilation of all JS file like explain in [[build]]
* Commit and push change into each extension repository

h3. Build Repository package

All extensions are registered on "Packagist":https://packagist.org. We also have composer backup repository of our packages built every night and available at http://packages.taocloud.org/. Build and configuration to build this backup are available https://github.com/oat-sa/repositories-packages and https://github.com/oat-sa/repositories-packages-utils

