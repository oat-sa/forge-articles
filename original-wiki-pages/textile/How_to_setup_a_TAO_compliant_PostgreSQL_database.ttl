{{>toc}}

h1. How to setup a TAO compliant PostgreSQL database

h2. 1. Introduction

TAO is able to run on multiple Relational Database Systems (RDBMS) including "PostgreSQL":http://www.postgresql.org/docs/9.2/static/index.html 8.4 and higher (LLE: work in 9.1 do not manage to make it work in 8.4). This tutorial will help you to set up a PostgreSQL database which is compliant with the TAO Platform.

Before starting, make sure you have a running installation of PostgreSQL on your web server and that "SQL Shell (psql)":http://www.postgresql.org/docs/8.1/static/app-psql.html is property installed.

This tutorial was created with PostgreSQL 9.2.

h2. 2. Database, Roles and Users

Launch SQL Shell (psql) and connect as your _root_ PostgreSQL. It is usually the _postgres_ user account. We will know create the database iself, and the users and roles that will be authorized to use it.

In psql, enter the following statements:

<pre>
CREATE ROLE "TAO";
CREATE DATABASE "taodb" OWNER "TAO";
CREATE USER "taouser";
ALTER USER "taouser" WITH PASSWORD 'password';
GRANT "TAO" to "taouser";
</pre>

The statements above create a new role (group of users) named _TAO_ and assign the _taouser_ user with password _password_ to it. It also create a new empty database named _taodb_.

h2. 3. Permissions

We now have to grant permissions to the _TAO_ roles in order to let the TAO Platform correctly address the Database.

Close the psql command line utility and execute it again as your _root_ user but this time, select _taodb_ as your working database. Still in psql, enter the following statements:

<pre>
GRANT SELECT ON ALL TABLES IN SCHEMA public TO "TAO";
GRANT INSERT ON ALL TABLES IN SCHEMA public TO "TAO";
GRANT UPDATE ON ALL TABLES IN SCHEMA public TO "TAO";
GRANT DELETE ON ALL TABLES IN SCHEMA public TO "TAO";
GRANT REFERENCES ON ALL TABLES IN SCHEMA public TO "TAO";
GRANT ALL PRIVILEGES ON ALL SEQUENCES IN SCHEMA public TO "TAO";
GRANT EXECUTE ON ALL FUNCTIONS IN SCHEMA public TO "TAO";
GRANT CREATE ON DATABASE "taodb" TO "TAO";
GRANT CONNECT ON DATABASE "taodb" TO "TAO";
GRANT TEMPORARY ON DATABASE "taodb" TO "TAO";
GRANT USAGE ON LANGUAGE plpgsql TO "TAO";
</pre>

The statements above

* Grant SELECT, INSERT, UPDATE, DELETE, REFERENCES on all tables in the public schema of the _taodb_ database for the _TAO_ role
* Grant ALL PRIVILEGES ON ALL SEQUENCES of the _taodb_ database for the _TAO_ role
* Grant EXECUTE ON ALL FUNCTIONS of the _taodb_ database for the _TAO_ role
* Grant CREATE, CONNECT, TEMPORARY on the _taodb_ database for the _TAO_ role
* Grant USAGE ON LANGUAGE plpgsql on the _taodb_ database for the _TAO_ role. The usage of the _plpgsql_ language is required to create and execute functions and stored procedures

h2. 4. Conclusion

You are now able to setup a TAO compliant PostgreSQL database. Please read the "PostgreSQL documentation":http://www.postgresql.org/docs/9.2/static/sql-grant.html if you want to know more about permissions.